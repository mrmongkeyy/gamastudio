const help={get(doc,p){doc=doc.querySelector(p);return this.inject(doc),doc},getall(doc,p){doc=doc.querySelectorAll(p);return doc.forEach(el=>{this.inject(el)}),doc},makeBound(p){const el=this.makeElement(p);return el.className="bound",el.onclick=()=>{el.remove(),el.callback&&el.callback()},el},makeElement(p){p=document.createElement(p);return this.inject(p),p},inject(el){if(el&&!this.isInjected(el)){var i,dfunctions={find(p){return help.get(this,p)},findall(p){return help.getall(this,p)},getValue(){var value=this.value;return this.value="",value},delete(){this.remove()},injected:!0};for(i in dfunctions)el[i]=dfunctions[i]}},isInjected(el){return!0===el.injected},isIn(src,value,p){return{array(){return this.arrString()},string(){return this.arrString()},object(){return p in src},arrString(){for(var j of src)if(j===value)return!0;return!1}}[p]()},remove:{array(config){const x=[];return config.src.forEach(data=>{data!==config.value&&x.push(data)}),x}},guID(config){config=config||{len:8,sid:"1234567890"};let id="";for(let i=0;i<config.len;i++)id+=config.sid[Math.floor(Math.random()*config.sid.length)];return id},storage(config,set){return set?(localStorage[config.dbName]=config.value,!0):localStorage[config.dbName]?JSON.parse(localStorage[config.dbName]):void 0},net:{reQ:{post(config){config.methode="post",this.init(config)},get(config){config.methode="get",this.init(config)},init(config){this.x=new XMLHttpRequest,this.x.open(config.methode,config.url),this.x.setRequestHeader("Content-Type","application/json"),this.x.onload=config.onload,this.x.send(config.data)}}},forEach(type,obj,callback){if(!type||!obj||!callback)return!1;if("array"===type||"string"===type)for(var i of obj)callback(i);else if("obj"===type)for(let i in obj)callback(i)}},req=help.net.reQ;